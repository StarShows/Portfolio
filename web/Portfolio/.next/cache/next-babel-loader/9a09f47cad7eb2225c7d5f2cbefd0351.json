{"ast":null,"code":"var _jsxFileName = \"/Users/starshows/Desktop/portfolio/web/Portfolio/pages/index.js\";\nimport React from \"react\";\nimport Layout from \"../comps/CoolLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nconst cardStyle = {\n  backgroundColor: \"#D3D3D3\",\n  border: \"solid 1px #e0e0e0\",\n  borderRadius: \"4px\",\n  padding: \"5px\"\n};\nconst cardLayout = {\n  display: \"grid\",\n  gridGap: \"10px 20px\"\n};\nconst cardLayoutInner = {\n  cursor: \"pointer\"\n};\n\nconst Index = props => React.createElement(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Batman TV Shows\"), React.createElement(\"div\", {\n  style: cardLayout,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, props.shows.map(show => React.createElement(\"div\", {\n  style: cardLayoutInner,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(Link, {\n  href: \"/newsblocks/[id]\",\n  as: \"/newsblocks/\".concat(show.id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  key: show.id,\n  style: cardStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(Link, {\n  href: \"/newsblocks/[id]\",\n  as: \"/newsblocks/\".concat(show.id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: show.image.medium,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})), React.createElement(Link, {\n  href: \"/newsblocks/[id]\",\n  as: \"/newsblocks/\".concat(show.id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, show.name)))))))); // Add a static async function to fetch data from tvmaze and return them as props.\n\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n  console.log(\"Show data fetched. Count: \".concat(data.length));\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/starshows/Desktop/portfolio/web/Portfolio/pages/index.js"],"names":["Layout","Link","fetch","cardStyle","backgroundColor","border","borderRadius","padding","cardLayout","display","gridGap","cardLayoutInner","cursor","Index","props","shows","map","show","id","image","medium","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,eAAe,EAAE,SADD;AAEhBC,EAAAA,MAAM,EAAE,mBAFQ;AAGhBC,EAAAA,YAAY,EAAE,KAHE;AAIhBC,EAAAA,OAAO,EAAE;AAJO,CAAlB;AAMA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE,MADQ;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAAnB;AAKA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,MAAM,EAAE;AADc,CAAxB;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IACjB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,EAAA,KAAK,EAAEN,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGM,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB;AAAK,EAAA,KAAK,EAAEN,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,kBAAX;AAA8B,EAAA,EAAE,wBAAiBM,IAAI,CAACC,EAAtB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,IAAI,CAACC,EAAf;AAAmB,EAAA,KAAK,EAAEf,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,kBAAX;AAA8B,EAAA,EAAE,wBAAiBc,IAAI,CAACC,EAAtB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,IAAI,CAACE,KAAL,CAAWC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,kBAAX;AAA8B,EAAA,EAAE,wBAAiBH,IAAI,CAACC,EAAtB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACI,IAAT,CADF,CAJF,CADF,CADF,CADD,CADH,CAFF,CADF,C,CAsBA;;;AACAR,KAAK,CAACS,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMrB,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMsB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,qCAAyCH,IAAI,CAACI,MAA9C;AAEA,SAAO;AACLb,IAAAA,KAAK,EAAES,IAAI,CAACR,GAAL,CAASa,KAAK,IAAIA,KAAK,CAACZ,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from \"../comps/CoolLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst cardStyle = {\n  backgroundColor: \"#D3D3D3\",\n  border: \"solid 1px #e0e0e0\",\n  borderRadius: \"4px\",\n  padding: \"5px\"\n};\nconst cardLayout = {\n  display: \"grid\",\n  gridGap: \"10px 20px\"\n};\n\nconst cardLayoutInner = {\n  cursor: \"pointer\"\n};\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <div style={cardLayout}>\n      {props.shows.map(show => (\n        <div style={cardLayoutInner}>\n          <Link href=\"/newsblocks/[id]\" as={`/newsblocks/${show.id}`}>\n            <div key={show.id} style={cardStyle}>\n              <Link href=\"/newsblocks/[id]\" as={`/newsblocks/${show.id}`}>\n                <img src={show.image.medium} />\n              </Link>\n              <Link href=\"/newsblocks/[id]\" as={`/newsblocks/${show.id}`}>\n                <a>{show.name}</a>\n              </Link>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>\n  </Layout>\n);\n\n// Add a static async function to fetch data from tvmaze and return them as props.\nIndex.getInitialProps = async function() {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}