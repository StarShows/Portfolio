{"ast":null,"code":"var _jsxFileName = \"/Users/starshows/Desktop/portfolio/web/Portfolio-react/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Layout from \"../comps/CoolLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nconst cardStyle = {\n  backgroundColor: \"#711324\",\n  border: \"solid 1px #e0e0e0\",\n  borderRadius: \"4px\",\n  padding: \"5px\",\n  color: '#ffffff'\n};\nconst cardLayout = {\n  display: \"grid\",\n  gridGap: \"10px 20px\"\n};\nconst cardLayoutInner = {\n  cursor: \"pointer\"\n};\n\nconst Index = props => React.createElement(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"Batman TV Shows\"), React.createElement(\"div\", {\n  style: cardLayout,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, props.shows.map(show => React.createElement(\"div\", {\n  style: cardLayoutInner,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(Link, {\n  href: \"/newsblocks/[id]\",\n  as: `/newsblocks/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  key: show.id,\n  style: cardStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(Link, {\n  href: \"/newsblocks/[id]\",\n  as: `/newsblocks/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: show.image.medium,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), React.createElement(Link, {\n  href: \"/newsblocks/[id]\",\n  as: `/newsblocks/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, show.name))))))));\n\nfunction getPosts() {\n  return [{\n    id: 'avis-portfolio',\n    title: 'Welcome to Avis react portfolio'\n  }, {\n    id: 'tech-stacks',\n    title: 'Tech Stacks im good with'\n  }, {\n    id: 'previous-projects',\n    title: 'Projects made by Avi Tannenbaum'\n  }];\n}\n\nexport function NewsFeed() {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-4263681031\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Avi's NewsFeed\"), React.createElement(\"ul\", {\n    className: \"jsx-4263681031\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, getPosts().map(news => React.createElement(\"li\", {\n    key: news.id,\n    className: \"jsx-4263681031\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/newsblocks/[id]\",\n    as: `/newsblocks/${news.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"jsx-4263681031\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, news.title))))), React.createElement(_JSXStyle, {\n    id: \"4263681031\",\n    __self: this\n  }, \"h1.jsx-4263681031,a.jsx-4263681031{font-family:'Arial';}ul.jsx-4263681031{padding:0;}li.jsx-4263681031{list-style:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdGFyc2hvd3MvRGVza3RvcC9wb3J0Zm9saW8vd2ViL1BvcnRmb2xpby1yZWFjdC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRVEsQUFHK0IsQUFJVixBQUlNLFVBSGxCLE1BSUEsSUFSQSIsImZpbGUiOiIvVXNlcnMvc3RhcnNob3dzL0Rlc2t0b3AvcG9ydGZvbGlvL3dlYi9Qb3J0Zm9saW8tcmVhY3QvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wcy9Db29sTGF5b3V0XCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgZmV0Y2ggZnJvbSBcImlzb21vcnBoaWMtdW5mZXRjaFwiO1xuXG5jb25zdCBjYXJkU3R5bGUgPSB7XG4gIGJhY2tncm91bmRDb2xvcjogXCIjNzExMzI0XCIsXG4gIGJvcmRlcjogXCJzb2xpZCAxcHggI2UwZTBlMFwiLFxuICBib3JkZXJSYWRpdXM6IFwiNHB4XCIsXG4gIHBhZGRpbmc6IFwiNXB4XCIsXG4gIGNvbG9yOiAnI2ZmZmZmZidcbn07XG5jb25zdCBjYXJkTGF5b3V0ID0ge1xuICBkaXNwbGF5OiBcImdyaWRcIixcbiAgZ3JpZEdhcDogXCIxMHB4IDIwcHhcIixcbn07XG5cbmNvbnN0IGNhcmRMYXlvdXRJbm5lciA9IHtcbiAgY3Vyc29yOiBcInBvaW50ZXJcIlxufTtcblxuXG5cblxuY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPGgxPkJhdG1hbiBUViBTaG93czwvaDE+XG4gICAgPGRpdiBzdHlsZT17Y2FyZExheW91dH0+XG4gICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxuICAgICAgICA8ZGl2IHN0eWxlPXtjYXJkTGF5b3V0SW5uZXJ9PlxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvbmV3c2Jsb2Nrcy9baWRdXCIgYXM9e2AvbmV3c2Jsb2Nrcy8ke3Nob3cuaWR9YH0+XG4gICAgICAgICAgICA8ZGl2IGtleT17c2hvdy5pZH0gc3R5bGU9e2NhcmRTdHlsZX0+XG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvbmV3c2Jsb2Nrcy9baWRdXCIgYXM9e2AvbmV3c2Jsb2Nrcy8ke3Nob3cuaWR9YH0+XG4gICAgICAgICAgICAgICAgPGltZyBzcmM9e3Nob3cuaW1hZ2UubWVkaXVtfSAvPlxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvbmV3c2Jsb2Nrcy9baWRdXCIgYXM9e2AvbmV3c2Jsb2Nrcy8ke3Nob3cuaWR9YH0+XG4gICAgICAgICAgICAgICAgPGE+e3Nob3cubmFtZX08L2E+XG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApKX1cbiAgICA8L2Rpdj5cbiAgPC9MYXlvdXQ+XG4pO1xuXG5mdW5jdGlvbiBnZXRQb3N0cygpIHtcbiAgcmV0dXJuIFtcbiAgICAgIHsgaWQ6ICdhdmlzLXBvcnRmb2xpbycsIHRpdGxlOiAnV2VsY29tZSB0byBBdmlzIHJlYWN0IHBvcnRmb2xpbyd9LFxuICAgICAgeyBpZDogJ3RlY2gtc3RhY2tzJywgdGl0bGU6ICdUZWNoIFN0YWNrcyBpbSBnb29kIHdpdGgnfSxcbiAgICAgIHsgaWQ6ICdwcmV2aW91cy1wcm9qZWN0cycsIHRpdGxlOiAnUHJvamVjdHMgbWFkZSBieSBBdmkgVGFubmVuYmF1bSd9XG4gIF07XG59XG5leHBvcnQgIGZ1bmN0aW9uIE5ld3NGZWVkKCkge1xuICByZXR1cm4gKFxuPExheW91dD5cbiAgPGgxPkF2aSdzIE5ld3NGZWVkPC9oMT5cbiAgPHVsPlxuICAgIHtnZXRQb3N0cygpLm1hcChuZXdzID0+IChcbiAgICAgIDxsaSBrZXk9e25ld3MuaWR9PlxuICAgICAgICA8TGluayBocmVmPVwiL25ld3NibG9ja3MvW2lkXVwiIGFzPXtgL25ld3NibG9ja3MvJHtuZXdzLmlkfWB9PlxuICAgICAgICAgIDxhPntuZXdzLnRpdGxlfTwvYT5cbiAgICAgICAgPC9MaW5rPlxuICAgICAgPC9saT5cbiAgICApKX1cbiAgPC91bD5cbiAgICAgIHsvKiBUaGUgbmV4dC5qcyB3YXkgb2Ygc3R5bGluZyAqL31cbiAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAge2AgaDEsXG4gICAgICAgIGEge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICB9XG5cbiAgICAgICAgdWwge1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cblxuICAgICAgICBsaSB7XG4gICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICBgfVxuICAgICAgPC9zdHlsZT5cbjwvTGF5b3V0PlxuICApO1xufSBcbi8vIEFkZCBhIHN0YXRpYyBhc3luYyBmdW5jdGlvbiB0byBmZXRjaCBkYXRhIGZyb20gdHZtYXplIGFuZCByZXR1cm4gdGhlbSBhcyBwcm9wcy5cbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuXCIpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICBjb25zb2xlLmxvZyhgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xuXG4gIHJldHVybiB7XG4gICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbmRleDsiXX0= */\\n/*@ sourceURL=/Users/starshows/Desktop/portfolio/web/Portfolio-react/pages/index.js */\"));\n} // Add a static async function to fetch data from tvmaze and return them as props.\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/starshows/Desktop/portfolio/web/Portfolio-react/pages/index.js"],"names":["Layout","Link","fetch","cardStyle","backgroundColor","border","borderRadius","padding","color","cardLayout","display","gridGap","cardLayoutInner","cursor","Index","props","shows","map","show","id","image","medium","name","getPosts","title","NewsFeed","news","getInitialProps","res","data","json","console","log","length","entry"],"mappings":"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","sourcesContent":["import Layout from \"../comps/CoolLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst cardStyle = {\n  backgroundColor: \"#711324\",\n  border: \"solid 1px #e0e0e0\",\n  borderRadius: \"4px\",\n  padding: \"5px\",\n  color: '#ffffff'\n};\nconst cardLayout = {\n  display: \"grid\",\n  gridGap: \"10px 20px\",\n};\n\nconst cardLayoutInner = {\n  cursor: \"pointer\"\n};\n\n\n\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <div style={cardLayout}>\n      {props.shows.map(show => (\n        <div style={cardLayoutInner}>\n          <Link href=\"/newsblocks/[id]\" as={`/newsblocks/${show.id}`}>\n            <div key={show.id} style={cardStyle}>\n              <Link href=\"/newsblocks/[id]\" as={`/newsblocks/${show.id}`}>\n                <img src={show.image.medium} />\n              </Link>\n              <Link href=\"/newsblocks/[id]\" as={`/newsblocks/${show.id}`}>\n                <a>{show.name}</a>\n              </Link>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>\n  </Layout>\n);\n\nfunction getPosts() {\n  return [\n      { id: 'avis-portfolio', title: 'Welcome to Avis react portfolio'},\n      { id: 'tech-stacks', title: 'Tech Stacks im good with'},\n      { id: 'previous-projects', title: 'Projects made by Avi Tannenbaum'}\n  ];\n}\nexport  function NewsFeed() {\n  return (\n<Layout>\n  <h1>Avi's NewsFeed</h1>\n  <ul>\n    {getPosts().map(news => (\n      <li key={news.id}>\n        <Link href=\"/newsblocks/[id]\" as={`/newsblocks/${news.id}`}>\n          <a>{news.title}</a>\n        </Link>\n      </li>\n    ))}\n  </ul>\n      {/* The next.js way of styling */}\n      <style jsx>\n       {` h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n        }\n        `}\n      </style>\n</Layout>\n  );\n} \n// Add a static async function to fetch data from tvmaze and return them as props.\nIndex.getInitialProps = async function() {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}