{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Layout from \"../comps/CoolLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nvar cardStyle = {\n  backgroundColor: \"#711324\",\n  border: \"solid 1px #e0e0e0\",\n  borderRadius: \"4px\",\n  padding: \"5px\",\n  color: '#ffffff'\n};\nvar cardLayout = {\n  display: \"grid\",\n  gridGap: \"10px 20px\"\n};\nvar cardLayoutInner = {\n  cursor: \"pointer\"\n};\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, \"Batman TV Shows\"), React.createElement(\"div\", {\n    style: cardLayout\n  }, props.shows.map(function (show) {\n    return React.createElement(\"div\", {\n      key: show.id,\n      style: cardLayoutInner\n    }, React.createElement(Link, {\n      href: \"/newsblocks/[id]\",\n      as: \"/newsblocks/\".concat(show.id)\n    }, React.createElement(\"div\", {\n      key: show.id,\n      style: cardStyle\n    }, React.createElement(Link, {\n      href: \"/newsblocks/[id]\",\n      as: \"/newsblocks/\".concat(show.id)\n    }, React.createElement(\"img\", {\n      src: show.image.medium\n    })), React.createElement(Link, {\n      href: \"/newsblocks/[id]\",\n      as: \"/newsblocks/\".concat(show.id)\n    }, React.createElement(\"a\", null, show.name)))));\n  })));\n};\n\nfunction getPosts() {\n  return [{\n    id: 'avis-portfolio',\n    title: 'Welcome to Avis react portfolio'\n  }, {\n    id: 'tech-stacks',\n    title: 'Tech Stacks im good with'\n  }, {\n    id: 'previous-projects',\n    title: 'Projects made by Avi Tannenbaum'\n  }];\n}\n/*\nexport function NewsFeed() {\n  return (\n<Layout>\n  <h1>Avi's NewsFeed</h1>\n  <ul>\n    {getPosts().map(news => (\n      <li key={news.id}>\n        <Link href=\"/newsblocks/[id]\" as={`/newsblocks/${news.id}`}>\n          <a>{news.title}</a>\n        </Link>\n      </li>\n    ))}\n  </ul>\n      <style jsx>\n       {` h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n        }\n        `}\n      </style>\n</Layout>\n  );\n} \n*/\n// Add a static async function to fetch data from tvmaze and return them as props.\n\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}